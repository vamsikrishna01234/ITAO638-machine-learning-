import numpy as np
import matplotlib.pyplot as plt
from sklearn.mixture import GaussianMixture
from sklearn.datasets import make_blobs

# Generate synthetic dataset
np.random.seed(42)
X, y_true = make_blobs(n_samples=300, centers=3, cluster_std=0.60, random_state=0)

# Initialize the Gaussian Mixture Model
gmm = GaussianMixture(n_components=3, max_iter=100, random_state=42)

# Fit the model
gmm.fit(X)

# Predict the cluster labels
y_gmm = gmm.predict(X)

# Plot the results
plt.scatter(X[:, 0], X[:, 1], c=y_gmm, s=40, cmap='viridis')
plt.scatter(gmm.means_[:, 0], gmm.means_[:, 1], s=200, c='red', marker='X')
plt.title("Gaussian Mixture Model Clustering")
plt.xlabel("Feature 1")
plt.ylabel("Feature 2")
plt.show()

# Display the parameters
print("Weights of each component: ", gmm.weights_)
print("Means of each component: ", gmm.means_)
print("Covariances of each component: ", gmm.covariances_)
