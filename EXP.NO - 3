import numpy as np
from sklearn import datasets
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier
from sklearn import tree
import matplotlib.pyplot as plt

# Load the Iris dataset
iris = datasets.load_iris()
X = iris.data
y = iris.target

# Split the dataset into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

# Create the Decision Tree classifier using the ID3 algorithm
# In scikit-learn, this is the default algorithm for DecisionTreeClassifier
clf = DecisionTreeClassifier(criterion='entropy', random_state=42)
clf.fit(X_train, y_train)

# Evaluate the model on the test set
accuracy = clf.score(X_test, y_test)
print(f"Accuracy on the test set: {accuracy * 100:.2f}%")

# Visualize the Decision Tree
plt.figure(figsize=(15,10))
tree.plot_tree(clf, filled=True, feature_names=iris.feature_names, class_names=iris.target_names)
plt.show()

# Classify a new sample
new_sample = np.array([[5.0, 3.6, 1.4, 0.2]])  # This is a sample from the setosa class
predicted_class = clf.predict(new_sample)
predicted_class_name = iris.target_names[predicted_class[0]]
print(f"The predicted class for the new sample is: {predicted_class_name}")
